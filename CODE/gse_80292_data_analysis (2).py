# -*- coding: utf-8 -*-
"""GSE_80292_data_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WSlwzrzTPq-OvZ-NP6GXplp0eg0auIY6
"""

#import all necessary packages
import pandas as pd
import numpy as np
import scipy as sp
import matplotlib.pyplot as plt
import seaborn as sns

#mount access to google drive
from google.colab import drive
drive.mount('/content/drive')

#read in normalized FPKM data from microgravity and gravity excel files
raw_microgravity = pd.read_excel('/content/drive/MyDrive/GSE80292data/GSM2123858_MG1-Human.GeneExpression.xls')
raw_gravity = pd.read_excel('/content/drive/MyDrive/GSE80292data/GSM2123857_S1-Human.GeneExpression.xls')

#clean each dataset and
#combine gravity and microgravity FPKM data together using gene_id as index
raw_microgravity = raw_microgravity.set_index('gene_id')
raw_gravity = raw_gravity.set_index('gene_id')

#erase unneccessary columns
raw_microgravity = raw_microgravity.drop(['tracking_id', 'class_code',
                                          'nearest_ref_id', 'gene_short_name',
                                          'tss_id', 'locus', 'length',
                                          'coverage','FPKM_conf_lo',
                                          'FPKM_conf_hi', 'FPKM_status'],
                                          axis = 1)
raw_gravity = raw_gravity.drop(['tracking_id', 'class_code', 'nearest_ref_id',
                                'gene_short_name', 'tss_id', 'locus', 'length',
                                'coverage','FPKM_conf_lo', 'FPKM_conf_hi',
                                'FPKM_status'], axis = 1)

#combine into one dataframe
raw_microgravity = raw_microgravity.rename(columns={'FPKM': 'MG_FPKM'})
raw_gravity = raw_gravity.rename(columns={'FPKM': 'Control_FPKM'})
all_data = pd.merge(raw_microgravity, raw_gravity, left_index=True,
                    right_index=True)

#clean dataset to remove 0 values
all_data = all_data[all_data['MG_FPKM'] != 0]
all_data = all_data[all_data['Control_FPKM'] != 0]

#calculate and plot fold changes of expression between microgravity
#and control FPKM values

#add log2 values of FPKM
all_data["log2_MG"] = np.log2(all_data['MG_FPKM']+1)
all_data["log2_Control"] = np.log2(all_data['Control_FPKM']+1)

#add column of Fold Change that shows if genes are up or downregulated
all_data["Fold_Change"] = all_data["MG_FPKM"] / all_data["Control_FPKM"]

for i in all_data['Fold_Change']:
  if i < .5:
    all_data['Fold_Change'] = all_data['Fold_Change'].replace(i, 'down')
  elif i > 2:
    all_data['Fold_Change'] = all_data['Fold_Change'].replace(i, 'up')
  else:
    all_data['Fold_Change'] = all_data['Fold_Change'].replace(i, 'unchanged')

#create scatterplot to visualize the data
figure = sns.scatterplot(x='log2_MG',y='log2_Control', hue='Fold_Change',
                         data=all_data).set(title = 'Gene Expression log2 Fold Change of HUVECs')
plt.savefig('HUVECGeneExpressionLog2FoldChangeFigure.png')